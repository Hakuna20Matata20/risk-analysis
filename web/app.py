# web/app.py
import os, sys
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

import streamlit as st
import pandas as pd
from src.metrics import load_data, compute_metrics
from src.risk_score import compute_risk_score, normalize
from src.risk_score import compute_risk_score, normalize, load_bounds

st.title("üìä Risk Analysis Dashboard")

# 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–∏—Ö
df = load_data('data/tasks.csv')
st.sidebar.markdown("### Filters")
# (—Ç—É—Ç –ø—ñ–∑–Ω—ñ—à–µ –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ –∑–∞ –¥–∞—Ç–∞–º–∏, –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ —Ç–æ—â–æ)

# 2. –ü–æ–∫–∞–∑ –±–∞–∑–æ–≤–∏—Ö –º–µ—Ç—Ä–∏–∫
metrics = compute_metrics(df)
st.subheader("Core Metrics")
st.write(pd.DataFrame.from_dict(metrics, orient='index', columns=['Value']))

# 3. Risk Score
# –î–ª—è demo: –º–µ–∂—ñ –∑–∞ —ñ—Å—Ç–æ—Ä—ñ—î—é –º–æ–∂–Ω–∞ –∑–∞—Ö–∞—Ä–¥–∫–æ–¥–∏—Ç–∏ –∞–±–æ –¥–∏–Ω–∞–º—ñ—á–Ω–æ –≤–∏—Ä–∞—Ö—É–≤–∞—Ç–∏
bounds = load_bounds('data/history.csv')
risk = compute_risk_score(metrics, bounds)
st.subheader(f"Overall Risk Score: {risk}")
# –ü–æ—Ä–æ–≥–æ–≤—ñ –ø–æ–∑–Ω–∞—á–∫–∏
if risk < 0.3:
    st.success("Low Risk")
elif risk < 0.6:
    st.warning("Medium Risk")
else:
    st.error("High Risk")

# 4. –î–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞ –º–µ—Ç—Ä–∏–∫–∞–º–∏
st.subheader("Metric Breakdown")
for k, v in metrics.items():
    st.write(f"**{k}**: {v} (norm: {round(normalize(v, *bounds[k]), 2)})")